# Generated by Django 5.2 on 2025-05-02 16:24

from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),

                # --- Core Fields ---
                ('phone_number', models.CharField(max_length=15, unique=True, verbose_name='Phone Number')),
                ('email', models.EmailField(blank=True, null=True, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=150, blank=True, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=150, blank=True, verbose_name='Last Name')),

                # --- Status Fields ---
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is Staff')),

                # --- Timestamps ---
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),

                # --- PermissionsMixin Fields ---
                ('is_superuser', models.BooleanField(
                    default=False,
                    help_text='Designates that this user has all permissions without explicitly assigning them.',
                    verbose_name='superuser status'
                )),
                ('groups', models.ManyToManyField(
                    blank=True,
                    related_name='user_set',
                    related_query_name='user',
                    to='auth.group',
                    verbose_name='groups',
                    help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.'
                )),
                ('user_permissions', models.ManyToManyField(
                    blank=True,
                    related_name='user_set',
                    related_query_name='user',
                    to='auth.permission',
                    verbose_name='user permissions',
                    help_text='Specific permissions for this user.'
                )),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'custom_user',
            },
        ),
    ]
